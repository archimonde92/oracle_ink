{
  "source": {
    "hash": "0x982145a460e907c2fc1ff5506acce1b3809c7d875a0f1365a279d949ca53bcbe",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.71.1",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "3.0.1",
      "rust_toolchain": "stable-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "prophet_feed_value_verifier",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "storage_contract_code_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          "Constructor that initializes the `bool` value to the given `init_value`."
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 5
        },
        "selector": "0x9bae9d5e"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          "Constructor that initializes the `bool` value to `false`.",
          "",
          "Constructors can delegate to other constructors."
        ],
        "label": "default",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 5
        },
        "selector": "0xed4b9d1b"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 15
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 13
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 24
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 4
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 14
      }
    },
    "events": [],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 7
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [
          " Get storage contract address"
        ],
        "label": "get_storage_address",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 8
        },
        "selector": "0x7fa4844d"
      },
      {
        "args": [
          {
            "label": "new_node",
            "type": {
              "displayName": [
                "TNodePublicKey"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "add_node",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x025a270e"
      },
      {
        "args": [
          {
            "label": "node_public_key",
            "type": {
              "displayName": [
                "TNodePublicKey"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "remove_node",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x72d12e1e"
      },
      {
        "args": [
          {
            "label": "pair_id",
            "type": {
              "displayName": [
                "TPairId"
              ],
              "type": 13
            }
          },
          {
            "label": "round_id",
            "type": {
              "displayName": [
                "TRoundId"
              ],
              "type": 14
            }
          },
          {
            "label": "value",
            "type": {
              "displayName": [
                "TValue"
              ],
              "type": 15
            }
          },
          {
            "label": "decimal",
            "type": {
              "displayName": [
                "TDecimal"
              ],
              "type": 16
            }
          },
          {
            "label": "timestamp",
            "type": {
              "displayName": [
                "Timestamp"
              ],
              "type": 14
            }
          }
        ],
        "default": false,
        "docs": [
          " A message that can be called on instantiated contracts.",
          " This one flips the value of the stored `bool` from `true`",
          " to `false` and vice versa."
        ],
        "label": "restricted_update_new_answer",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xc7ead32c"
      },
      {
        "args": [
          {
            "label": "answers",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 17
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "restricted_update_new_answers",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xb051ea90"
      },
      {
        "args": [
          {
            "label": "pair_id",
            "type": {
              "displayName": [
                "TPairId"
              ],
              "type": 13
            }
          },
          {
            "label": "public_keys",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 19
            }
          },
          {
            "label": "answers",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 20
            }
          },
          {
            "label": "signatures",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 22
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "transmit_process",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xef8f7da1"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "get_verifier",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 8
        },
        "selector": "0x3c5a0aab"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 0
                                }
                              },
                              "name": "account_id"
                            }
                          ],
                          "name": "CallBuilder"
                        }
                      },
                      "name": "inner"
                    }
                  ],
                  "name": "ProphetFeedValueStorageRef"
                }
              },
              "name": "storage_contract"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0xeaed8499",
                      "ty": 3
                    }
                  },
                  "root_key": "0xeaed8499"
                }
              },
              "name": "nodes"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x6729ff3d",
                      "ty": 3
                    }
                  },
                  "root_key": "0x6729ff3d"
                }
              },
              "name": "processed_txn"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "owner"
            }
          ],
          "name": "ProphetFeedValueVerifier"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 7
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 7
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "array": {
            "len": 33,
            "type": 2
          }
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 11
          },
          {
            "name": "E",
            "type": 7
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 12
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "NotVerifierContract"
              },
              {
                "index": 1,
                "name": "EmptyAnswersFound"
              },
              {
                "index": 2,
                "name": "EmptySignaturesFound"
              },
              {
                "index": 3,
                "name": "EmptyPublicKeysFound"
              },
              {
                "index": 4,
                "name": "NotMatchedInputLength"
              },
              {
                "index": 5,
                "name": "NotOwner"
              },
              {
                "index": 6,
                "name": "RecoverFailed"
              },
              {
                "index": 7,
                "name": "NodeAlreadyAdded"
              },
              {
                "index": 8,
                "name": "NodeIsNotExists"
              },
              {
                "index": 9,
                "name": "SignatureInvalid"
              }
            ]
          }
        },
        "path": [
          "prophet_feed_value_verifier",
          "prophet_feed_value_verifier",
          "Error"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "sequence": {
            "type": 18
          }
        }
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "pair_id",
                "type": 13,
                "typeName": "TPairId"
              },
              {
                "name": "round_id",
                "type": 14,
                "typeName": "TRoundId"
              },
              {
                "name": "value",
                "type": 15,
                "typeName": "TValue"
              },
              {
                "name": "decimal",
                "type": 16,
                "typeName": "TDecimal"
              },
              {
                "name": "timestamp",
                "type": 14,
                "typeName": "Timestamp"
              }
            ]
          }
        },
        "path": [
          "prophet_feed_value_storage",
          "prophet_feed_value_storage",
          "AnswerParam"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "sequence": {
            "type": 9
          }
        }
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "sequence": {
            "type": 21
          }
        }
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "value",
                "type": 15,
                "typeName": "TValue"
              },
              {
                "name": "decimal",
                "type": 16,
                "typeName": "TDecimal"
              },
              {
                "name": "round_id",
                "type": 14,
                "typeName": "TRoundId"
              },
              {
                "name": "timestamp",
                "type": 14,
                "typeName": "Timestamp"
              }
            ]
          }
        },
        "path": [
          "prophet_feed_value_storage",
          "prophet_feed_value_storage",
          "AnswerData"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "sequence": {
            "type": 23
          }
        }
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "array": {
            "len": 65,
            "type": 2
          }
        }
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}